**Find the Maximum Subarray Sum using Kadane's Algorithm**
```cpp
#include <iostream>
#include <climits>
using namespace std;
int maxSubArraySum(int arr[], int n) {
    int maxSum = INT_MIN, currSum = 0;
    for (int i = 0; i < n; i++) {
        currSum += arr[i];
        if (currSum > maxSum) maxSum = currSum;
        if (currSum < 0) currSum = 0;
    }
    return maxSum;
}
int main() {
    int arr[] = {-2, 1, -3, 4, -1, 2, 1, -5, 4};
    int n = sizeof(arr) / sizeof(arr[0]);
    cout << "Maximum Subarray Sum: " << maxSubArraySum(arr, n);
    return 0;
}
```
**Output:** `Maximum Subarray Sum: 6`
